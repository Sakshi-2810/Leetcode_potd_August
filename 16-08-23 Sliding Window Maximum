class compare{
    public:
    bool operator()(pair<int,int>p1,pair<int,int>p2)
    {
        if(p2.first>p1.first) return true;
        else if(p2.first==p1.first && p2.second<p1.second) return true;
        return false;
    }
};
class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        priority_queue<pair<int,int>,vector<pair<int,int>>,compare>p;
        vector<int> ans;
        int i=-1;
        for(int j=0;j<k;j++) p.push({nums[j],j});
        for(int j=k;j<=nums.size();j++)
        {
            while(!p.empty() && p.top().second<=i) p.pop();
            ans.push_back(p.top().first);
            if(j<nums.size())
            p.push({nums[j],j});
            i++;
        }
        return ans;
    }
};
