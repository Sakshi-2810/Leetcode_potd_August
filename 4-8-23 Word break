class Solution {
public:
    int solve(string s, set<string>& words,int i,int j,vector<int>&dp)
    {
        if(dp[i]!=-1) return dp[i];
        int ans;
        for(int k=i;k<=j;k++)
        {
             ans=0;
            if(words.find(s.substr(i,k-i+1))!=words.end() ) ans=1;
            
                if(ans==1 && k+1<=j)
                ans=solve(s,words,k+1,j,dp);   
                    
            
             dp[i]=max(dp[i],ans);       
            
        }
        return dp[i];
    }
 
    bool wordBreak(string s, vector<string>& wordDict) {
        set<string> word;
        for(auto i:wordDict) word.insert(i);
        vector<int>dp(s.length(),-1);
        if(solve(s,word,0,s.length()-1,dp)) return true;
        return false;
    }
};
