  bool solve(vector<int>&nums,int i,unordered_map<int,bool>&m)
    {
        if(i==nums.size()) return true;
        if(m.find(i)!=m.end()) return m[i];
        if(i+1<nums.size())
        {
            if(nums[i]==nums[i+1] && solve(nums,i+2,m)) return m[i]=true;
        }
        if(i+2<nums.size())
        {
            if(nums[i]==nums[i+1] && nums[i+2]==nums[i] && solve(nums,i+3,m)) return m[i]= true;
            if(nums[i]+1==nums[i+1] && nums[i]+2==nums[i+2] && solve(nums,i+3,m)) return m[i]= true;
        }
        return m[i]= false;
    }
    bool validPartition(vector<int>& nums) {
        unordered_map<int,bool>m;
        return solve(nums,0,m);
    }
